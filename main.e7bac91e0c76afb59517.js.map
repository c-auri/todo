{"version":3,"file":"main.e7bac91e0c76afb59517.js","mappings":"2sBAAA,IAAIA,EAAgB,ECSpB,MAAMC,EAAa,YAEZ,SAASC,EAAeC,GAC3B,MAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAY,GAEjB,MAAMC,EAAWH,SAASI,cAAc,MACxCD,EAASE,UAAUC,OAAO,aAC1BH,EAASI,GAAKX,EAEd,IAAK,MAAMY,KAAQV,EAAQW,MACvBN,EAASO,YAAYC,EAAWH,IAGpCT,EAAKW,YAAYP,GACjBJ,EAAKW,YCnBF,WACH,MAAME,EAAOZ,SAASI,cAAc,QAKpC,OAJAQ,EAAKP,UAAUQ,IAAI,QACnBD,EAAKL,GAAK,WACVK,EAAKF,YAKT,WACI,MAAMI,EAAQd,SAASI,cAAc,SAIrC,OAHAU,EAAMC,KAAO,OACbD,EAAMP,GAAK,iBACXO,EAAME,YAAc,QACbF,CACX,CAXqBG,IACjBL,EAAKF,YAYT,WACI,MAAMQ,EAASlB,SAASI,cAAc,UAMtC,OALAc,EAAOH,KAAO,SACdG,EAAOX,GAAK,kBACZW,EAAOb,UAAUQ,IAAI,gBACrBK,EAAOhB,UAAY,IACnBgB,EAAOC,iBAAiB,SAAS,IAIrC,WACI,MAAMC,EAAQpB,SAASC,cAAc,mBClBlC,IAAoBO,IHRpB,SAAoBY,GACvB,MAAO,CACHb,GAAIZ,IACJyB,MAAOA,EAEf,CEsBeC,CAAWD,EAAME,OClB5BC,EAAeV,IAAIL,GACnBX,EAAe0B,GDkBfH,EAAME,MAAQ,EAClB,CAR2CE,KAChCN,CACX,CApBqBO,IACVb,CACX,CDYqBc,GACrB,CAEA,SAASf,EAAWH,GAChB,MAAMmB,EAAK3B,SAASI,cAAc,MAClCuB,EAAGtB,UAAUQ,IAAI,QACjBc,EAAGC,aAAa,UAAW,GAAGpB,EAAKD,IAEnC,MAAMa,EAAQpB,SAASI,cAAc,QACrCgB,EAAMf,UAAUQ,IAAI,eACpBO,EAAMlB,UAAYM,EAAKY,MAEvB,MAAMS,EAAe7B,SAASI,cAAc,UAO5C,OANAyB,EAAaxB,UAAUQ,IAAI,gBAC3BgB,EAAa3B,UAAY,IACzB2B,EAAaV,iBAAiB,SAAS,IEfpC,SAAoBX,GACvBe,EAAeO,OAAOtB,GACtBX,EAAe0B,EACnB,CFYiDQ,CAAWvB,KAExDmB,EAAGjB,YAAYU,GACfO,EAAGjB,YAAYmB,GACRF,CACX,CExCA,IAAIJ,EAGAA,EAAiB,ICLd,MAIHS,YAAYZ,GAHZ,mBACA,mBAGI,EAAAa,KAAI,EAAUb,EAAK,KACnB,EAAAa,KAAI,EAAU,GAAE,IACpB,CAEIb,YACA,OAAO,EAAAa,KAAI,MACf,CAEIxB,YACA,OAAO,EAAAwB,KAAI,MACf,CAEApB,IAAIL,GACA,EAAAyB,KAAI,OAAQC,KAAK1B,EACrB,CAEAsB,OAAOtB,GACH,MAAM2B,EAAQ,EAAAF,KAAI,OAAQG,QAAQ5B,GAElC,IAAe,IAAX2B,EACA,MAAME,MAAM,gEAGhB,EAAAJ,KAAI,OAAQK,OAAOH,EAAO,EAC9B,GDxB6B,SAC7BtC,EAAe0B,E","sources":["webpack://todo/./src/models/Todo.ts","webpack://todo/./src/views/TodoList.ts","webpack://todo/./src/views/TodoInput.ts","webpack://todo/./src/controller/TodoController.ts","webpack://todo/./src/models/Project.ts"],"sourcesContent":["let numberOfTodos = 0\n\nexport interface Todo {\n    id: number\n    title: string\n}\n\nexport function createTodo(title : string) {\n    return {\n        id: numberOfTodos++,\n        title: title\n    }\n}","import './TodoList.scss'\n\nimport { Project } from '../models/Project'\nimport { Todo } from '../models/Todo'\n\nimport { removeTodo } from '../controller/TodoController'\n\nimport { createTodoInput } from './TodoInput'\n\nconst todoListId = 'todo-list'\n\nexport function renderTodoList(project: Project) {\n    const main = document.querySelector('main')\n    main.innerHTML = ''\n\n    const todoList = document.createElement('ul')\n    todoList.classList.toggle('todo-list')\n    todoList.id = todoListId\n\n    for (const todo of project.todos) {\n        todoList.appendChild(renderTodo(todo))\n    }\n\n    main.appendChild(todoList)\n    main.appendChild(createTodoInput())\n}\n\nfunction renderTodo(todo : Todo) {\n    const li = document.createElement('li')\n    li.classList.add('todo')\n    li.setAttribute('data-id', \"\"+todo.id)\n\n    const title = document.createElement('span')\n    title.classList.add('todo__title')\n    title.innerHTML = todo.title\n\n    const deleteButton = document.createElement('button')\n    deleteButton.classList.add('todo__button')\n    deleteButton.innerHTML = \"x\"\n    deleteButton.addEventListener('click', () => removeTodo(todo))\n\n    li.appendChild(title)\n    li.appendChild(deleteButton)\n    return li\n}","import './TodoInput.scss'\n\nimport { createTodo } from '../models/Todo'\nimport { appendTodo } from '../controller/TodoController'\n\nexport function createTodoInput() {\n    const form = document.createElement('form')\n    form.classList.add('todo')\n    form.id = 'new-todo'\n    form.appendChild(createTitleInput())\n    form.appendChild(createAddButton())\n    return form\n}\n\nfunction createTitleInput() {\n    const input = document.createElement('input')\n    input.type = 'text'\n    input.id = 'new-todo-title'\n    input.placeholder = 'title'\n    return input\n}\n\nfunction createAddButton() {\n    const button = document.createElement('button')\n    button.type = 'button'\n    button.id = 'new-todo-button'\n    button.classList.add('todo__button')\n    button.innerHTML = '+'\n    button.addEventListener(\"click\", () => addNewTodo())\n    return button\n}\n\nfunction addNewTodo() {\n    const title = document.querySelector('#new-todo-title') as HTMLInputElement\n    appendTodo(createTodo(title.value))\n    title.value = ''\n}","import { Todo } from '../models/Todo'\nimport { Project } from '../models/Project'\nimport { renderTodoList } from '../views/TodoList'\n\nlet currentProject : Project\n\nexport function initialize() {\n    currentProject = new Project(\"Inbox\")\n    renderTodoList(currentProject)\n}\n\n/**\n * Appends Todo to the current project.\n * @param todo The Todo to append.\n */\nexport function appendTodo(todo: Todo) {\n    currentProject.add(todo)\n    renderTodoList(currentProject)\n}\n\n/**\n * Removes Todo from the current project.\n * @param todo The Todo to remove.\n */\nexport function removeTodo(todo: Todo) {\n    currentProject.remove(todo)\n    renderTodoList(currentProject)\n}","import { Todo } from './Todo'\n\nexport class Project {\n    #title: string\n    #todos: Todo[]\n\n    constructor(title: string) {\n        this.#title = title\n        this.#todos = []\n    }\n\n    get title() {\n        return this.#title\n    }\n\n    get todos() {\n        return this.#todos\n    }\n\n    add(todo: Todo) {\n        this.#todos.push(todo)\n    }\n\n    remove(todo: Todo) {\n        const index = this.#todos.indexOf(todo)\n\n        if (index === -1) {\n            throw Error('Trying to delete a Todo that does not exist in this project.')\n        }\n\n        this.#todos.splice(index, 1)\n    }\n}"],"names":["numberOfTodos","todoListId","renderTodoList","project","main","document","querySelector","innerHTML","todoList","createElement","classList","toggle","id","todo","todos","appendChild","renderTodo","form","add","input","type","placeholder","createTitleInput","button","addEventListener","title","createTodo","value","currentProject","addNewTodo","createAddButton","createTodoInput","li","setAttribute","deleteButton","remove","removeTodo","constructor","this","push","index","indexOf","Error","splice"],"sourceRoot":""}