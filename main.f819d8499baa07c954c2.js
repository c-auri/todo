(()=>{"use strict";var t,e,n=function(t,e,n,r,s){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!s:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?s.call(t,n):s?s.value=n:e.set(t,n),n},r=function(t,e,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(t):r?r.value:e.get(t)};let s=0;class o{constructor(t,e,n=undefined){this.id=void 0===n?++s:n,this.title=t,this.date=e}toJSON(){return{id:this.id,title:this.title,date:this.date}}}class a{constructor(r,s=[]){t.set(this,void 0),e.set(this,void 0),n(this,t,r,"f"),n(this,e,s,"f")}get title(){return r(this,t,"f")}get tasks(){return r(this,e,"f")}get isEmpty(){return 0===r(this,e,"f").length}add(t){r(this,e,"f").push(t)}remove(t){const n=r(this,e,"f").findIndex((e=>e.id===t));if(-1===n)throw Error("Trying to delete a Task that does not exist in this project.");r(this,e,"f").splice(n,1)}toJSON(){return{title:r(this,t,"f"),tasks:r(this,e,"f")}}static fromJSON(t){const e=JSON.parse(t),n=e.tasks,r=Array.from(n,(t=>new o(t.title,t.date,t.id)));return new a(e.title,r)}}function i(t){const e=document.querySelector("main"),n=function(t){const e=document.createElement("ul");e.classList.add("mb-3","list-group","list-group-flush"),t.isEmpty||e.classList.add("border-top","border-bottom");for(const n of t.tasks)e.appendChild(c(n));return e}(t),r=function(){const t=document.createElement("dialog");return t.classList.add("border","rounded-4"),t.innerHTML='\n        <form method="dialog" class="container">\n            <div class="mb-3 row">\n                <label class="form-label">\n                    Title\n                    <input type="text" class="form-control" id="new-task__title"></input>\n                </label>\n                <label class="form-label">\n                    Due Date\n                    <input type="date" class="form-control" id="new-task__date"></input>\n                </label>\n            </div>\n            <div class="mb-3">\n                <button class="btn btn-primary" id="new-task__confirm-btn" value="add">Add task</button>\n                <button class="btn btn-outline-secondary">Cancel</button>\n            </div>\n        </form>\n    ',t.addEventListener("close",(()=>function(t){const e=t.querySelector("#new-task__title"),n=t.querySelector("#new-task__date");if("add"===t.returnValue){const t=e.value;t&&function(t){const e=h.getProject();e.add(t),i(e),h.setProject(e)}(new o(t,new Date(n.value)))}e.value="",n.value=""}(t))),t}(),s=function(t){const e=document.createElement("button");return e.id="new-task__btn",e.classList.add("btn"),e.classList.add("btn-primary"),e.innerHTML="Add New Task",e.addEventListener("click",(()=>t.showModal())),e}(r);e.innerHTML="",e.appendChild(n),e.appendChild(r),e.appendChild(s)}function c(t){const e=document.createElement("li");return e.classList.add("list-group-item"),e.setAttribute("data-id",""+t.id),e.innerHTML=`\n        <span class="col">${t.title}</span>\n        <span class="col">${t.date}</span>\n        <span class="col">\n            <button class="btn btn-light">x</button>\n        </span>\n    `,e.querySelector("button").addEventListener("click",(()=>function(t){const e=h.getProject();e.remove(t),i(e),h.setProject(e)}(t.id))),e}t=new WeakMap,e=new WeakMap;var l,d,u,f=function(t,e,n,r){if("a"===n&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?r:"a"===n?r.call(t):r?r.value:e.get(t)};let h;l=new WeakSet,d=function(){return!!localStorage.getItem("currentProject")},u=function(){const t=new a("Inbox");localStorage.setItem("currentProject",JSON.stringify(t))},h=new class{constructor(){l.add(this),f(this,l,"m",d).call(this)||f(this,l,"m",u).call(this)}getProject(){const t=localStorage.getItem("currentProject");return a.fromJSON(t)}setProject(t){localStorage.setItem("currentProject",JSON.stringify(t))}},i(h.getProject())})();