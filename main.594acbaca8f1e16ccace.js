(()=>{"use strict";var t,e,n=function(t,e,n,o,i){if("m"===o)throw new TypeError("Private method is not writable");if("a"===o&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof e?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===o?i.call(t,n):i?i.value=n:e.set(t,n),n},o=function(t,e,n,o){if("a"===n&&!o)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof e?t!==e||!o:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===n?o:"a"===n?o.call(t):o?o.value:e.get(t)};t=new WeakMap,e=new WeakMap;let i=0;const d="todo-list";function s(t){const e=document.querySelector("main");e.innerHTML="";const n=document.createElement("ul");n.classList.toggle("todo-list"),n.id=d;for(const e of t.todos)n.appendChild(a(e));e.appendChild(n),e.appendChild(function(){const t=document.createElement("div"),e=document.createElement("dialog");e.innerHTML="\n        <form method='dialog' class='new-todo'>\n            <div class='new-todo__inputs'>\n                <label class='new-todo__label'>\n                    Title\n                    <input type='text' class='new-todo__input' id='new-todo__title'></input>\n                </label>\n            </div>\n            <div class='new-todo__buttons'>\n                <button class=\"button\">Cancel</button>\n                <button class=\"button\" id='new-todo__confirm-btn' value='add'>Add</button>\n            </div>\n        </form>\n    ",e.addEventListener("close",(()=>{const t=e.querySelector("#new-todo__title");if("add"===e.returnValue){const e=t.value;e&&(n=function(t){return{id:i++,title:t}}(e),r.add(n),s(r))}var n;t.value=""}));const n=document.createElement("button");return n.id="new-todo__btn",n.classList.add("button"),n.classList.add("button--new"),n.innerHTML="Add New Todo",n.addEventListener("click",(()=>e.showModal())),t.appendChild(e),t.appendChild(n),t}())}function a(t){const e=document.createElement("li");e.classList.add("todo"),e.setAttribute("data-id",""+t.id);const n=document.createElement("span");n.classList.add("todo__title"),n.innerHTML=t.title;const o=document.createElement("button");return o.classList.add("button"),o.classList.add("button--todo-controls"),o.innerHTML="x",o.addEventListener("click",(()=>function(t){r.remove(t),s(r)}(t))),e.appendChild(n),e.appendChild(o),e}let r;r=new class{constructor(o){t.set(this,void 0),e.set(this,void 0),n(this,t,o,"f"),n(this,e,[],"f")}get title(){return o(this,t,"f")}get todos(){return o(this,e,"f")}add(t){o(this,e,"f").push(t)}remove(t){const n=o(this,e,"f").indexOf(t);if(-1===n)throw Error("Trying to delete a Todo that does not exist in this project.");o(this,e,"f").splice(n,1)}}("Inbox"),s(r)})();